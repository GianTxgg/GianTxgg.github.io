<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>firewall防火墙</title>
      <link href="/2019/09/16/firewall-fang-huo-qiang/"/>
      <url>/2019/09/16/firewall-fang-huo-qiang/</url>
      
        <content type="html"><![CDATA[<p>​    firewalld防火墙是CentOS7版本系统默认的防火墙管理工具，取代了之前的iptables防火墙，与iptables防火墙一样也属于典型的包过滤防火墙或称之为网络层防火墙，firewalld和iptables都是用来管理防火墙的工具（属于用户态）来定义防火墙的各种规则功能，内部结构都指向netfilter这一强大的网络过滤子系统（属于内核态）以实现包过滤防火墙功能。firewalld防火墙最大的优点在于支持动态更新以及加入了防火墙的“Zone”概念，firewalld防火墙支持IPV4和IPV6地址。可以通过字符管理工具firewall-cmd和图形化管理工具firewall-config进行管理。</p><h2 id="一-区域的概念"><a href="#一-区域的概念" class="headerlink" title="一.区域的概念"></a>一.区域的概念</h2><p>​    firewalld防火墙为了简化管理，将所有网络流量分为多个区域（zone）。然后要所数据包的源IP地址或传入的网络接口条件等将流量传入相应区域。每个区域都定义了自己打开或关闭的端口服务列表。其中默认区域为public区域，trusted区域默认允许所有流量通过，是一个特殊的区域。</p><table><thead><tr><th align="left"><strong>区域名称</strong></th><th><strong>默认配置说明</strong></th></tr></thead><tbody><tr><td align="left">Trusted</td><td>允许所有的传入流量</td></tr><tr><td align="left">Home</td><td>允许与ssh、mdns、ipp-client、samba-client或dhcpv6-client预定义服务匹配的传入流量，其余均拒绝</td></tr><tr><td align="left">Internal</td><td>默认值时与home区域相同</td></tr><tr><td align="left">Work</td><td>允许与ssh、ipp-client或dhcpv6-client预定义服务匹配的传入流量，其余均拒绝</td></tr><tr><td align="left">Public</td><td>允许与ssh或dhcpv6-client预定义服务匹配的传入流量，其余均拒绝。是新添加网络接口的默认区域。</td></tr><tr><td align="left">External</td><td>允许与ssh预定义服务匹配的传入流量，其余均拒绝。默认将经过此区域转发的IPv4地址传出流量进行地址伪装。</td></tr><tr><td align="left">Dmz</td><td>允许与ssh预定义服务匹配的传入流量，其余均拒绝。</td></tr><tr><td align="left">Block</td><td>拒绝所有传入流量</td></tr><tr><td align="left">Drop</td><td>丢弃所有传入流量</td></tr></tbody></table><p>​    用户可以根据具体环境选择使用区域。管理员也可以对这些区域进行自定义，使其具有不同的设置规则。</p><p>​    在流量经过防火墙时，firewalld防火墙会对传入的每个数据包进行检查，如果此数据包的源地址关联到特定的区域，则会应用该区域的规则对此数据包进行处理，如果该源地址没有关联到任何区域，则将使用传入网络接口所在的区域规则进行处理。如果流量与不允许的端口、协议或者服务匹配，则防火墙拒绝传入流量。</p><h2 id="二-字符管理工具"><a href="#二-字符管理工具" class="headerlink" title="二.字符管理工具"></a>二.字符管理工具</h2><p>​    firewall-cmd是firewalld防火墙自带的字符管理工具，可以用来设置firewalld防火墙的各种规则，需要注意的是firewalld防火墙规则分为两种状态，一种是runtime(正在运行生效的状态），在runtime状态添加新的防火墙规则，这些规则会立即生效，但是重新加载防火墙配置或者重启系统后这些规则将会失效；一种是permanent（永久生效的状态），在permanent状态添加新的防火墙规则，这些规则不会马上生效，需要重新加载防火墙配置或者重启系统后生效。</p><p>​    在使用firewall-cmd命令管理防火墙时，需要添加为永久生效的规则需要在配置规则时添加–permanent选项（否则所有命令都是作用于runtime，运行时配置）,如果让永久生效规则立即覆盖当前规则生效使用，还需要使用firewall-cmd –reload命令重新加载防火墙配置。常用firewall-cmd命令如下：</p><table><thead><tr><th><strong>firewall-cmd命令</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>–get-default-zone</td><td>查看当前默认区域</td></tr><tr><td>–get-active-zones</td><td>列出当前正在使用的区域及其所对应的网卡接口</td></tr><tr><td>–get-zones</td><td>列出所有可用的区域</td></tr><tr><td>–set-default-zone=<zone></zone></td><td>设置默认区域（注意此命令会同时修改运行时配置和永久配置）</td></tr><tr><td>–add-source=<cidr>[–zone=<zone>]</zone></cidr></td><td>将来自IP地址或网段的所有流量路由到指定区域，没有指定区域时使用默认区域。</td></tr><tr><td>–remove-source=<cidr>[–zone=&lt;ZONE]</cidr></td><td>从指定区域中删除来自IP地址或网段的所有路由流量规则，没有指定区域时使用默认区域。</td></tr><tr><td>–add-interface=<interface>[–zone=&lt;ZONE]</interface></td><td>将来自该接口的所有流量都路由到指定区域。没有指定区域时使用默认区域。</td></tr><tr><td>–change-interface=<interface>[–zone=&lt;ZONE]</interface></td><td>将接口与指定区域做关联，没有指定区域时使用默认区域。</td></tr><tr><td>–list-all[–zone=&lt;ZONE]</td><td>列出指定区域已配置接口、源、服务、端口等信息，没有指定区域时使用默认区域。</td></tr><tr><td>–add-service=<service>[–zone=&lt;ZONE]</service></td><td>允许到该服务的流量通过指定区域，没有指定区域时使用默认区域。</td></tr><tr><td>–remove-service=<service>[–zone=&lt;ZONE]</service></td><td>从指定区域的允许列表中删除该服务，没有指定区域时使用默认区域。</td></tr><tr><td>–add-port=&lt;PORT/PROTOCOL&gt;[–zone=&lt;ZONE]</td><td>允许到该端口的流量通过指定区域，没有指定区域时使用默认区域。</td></tr><tr><td>–remove-port=&lt;PORT/PROTOCOL&gt;[–zone=&lt;ZONE]</td><td>从指定区域的允许列表中删除该端口，没有指定区域时使用默认区域。</td></tr></tbody></table><h3 id="1-区域管理"><a href="#1-区域管理" class="headerlink" title="1.区域管理"></a>1.区域管理</h3><p>firewall-cmd –help | wc -l<br>(1)查看默认区域</p><p>firewall-cmd –get-default-zone</p><p>(2)列出当前正在使用的区域及其所对应的网卡接口</p><p>firewall-cmd –get-active-zones</p><p>(3)列出所有可用的区域</p><p>firewall-cmd –get-zones</p><p>(4)设置默认区域</p><p>firewall-cmd –set-default-zone=block</p><h3 id="2-服务管理"><a href="#2-服务管理" class="headerlink" title="2.服务管理"></a>2.服务管理</h3><p>（1）查看预定义服务</p><p>firewall-cmd –get-services</p><p>（2）添加http服务到public区域</p><p>firewall-cmd –add-service=http –zone=public –permanent</p><p>systemctl restart firewalld</p><p>（3）查看public区域已配置的规则</p><p>firewall-cmd –list-all –zone=public</p><p>（4）移除public区域的http服务，不使用–zone指定区域时使用默认区域</p><p>firewall-cmd –remove-service=http –permanent –zone=public</p><p>systemctl restart firewalld</p><p>（5）将多个服务添加到某一个区域，不添加–permanent选项表示是即时生效的临时设置</p><p>firewall-cmd –add-service=http –add-service=https</p><p>systemctl restart firewalld</p><h3 id="3-端口管理"><a href="#3-端口管理" class="headerlink" title="3.端口管理"></a>3.端口管理</h3><p>(1)允许TCP的3306端口到public区域<br>firewall-cmd –add-port=3306/tcp<br>(2)从public区域将TCP的3306端口移除<br>firewall-cmd –remove-port=3306/tcp<br>(3)允许某一范围的端口，如允许UDP的2048-2050端口到public区域<br>firewall-cmd –add-port=2048-2050/udp –zone=public<br>(4)使用–list-ports查看加入的端口操作是否成功<br>firewall-cmd –list-ports</p><h3 id="4-伪装IP"><a href="#4-伪装IP" class="headerlink" title="4.伪装IP"></a>4.伪装IP</h3><p>（1）什么是地址伪装？<br>通过地址伪装，NAT设备将经过设备的包转发到指定的接收方，同时将通过的数据包源地址更改为其NAT设备自己的接口地址。当返回的数据包到达时，会将目的地址修改为原始主机的地址并做路由。地址伪装可以实现局域网多个地址共享单一公网地址上网。类似于NAT技术中的端口多路复用（PAT）。IP地址伪装仅支ipv4，不支持ipv6。</p><p>（2）相关命令<br>firewall-cmd –query-masquerade # 检查是否允许伪装IP<br>firewall-cmd –permanent –add-masquerade # 允许防火墙伪装IP<br>firewall-cmd –permanent –remove-masquerade# 禁止防火墙伪装IP</p><h3 id="5-端口转发"><a href="#5-端口转发" class="headerlink" title="5.端口转发"></a>5.端口转发</h3><p>当我们想把某个端口隐藏起来的时候，就可以在防火墙上阻止那个端口访问，然后再开一个不规则的端口，之后配置防火墙的端口转发，将流量转发过去。<br>firewall-cmd –permanent –add-masquerade<br>firewall-cmd –add-forward-port=port=8080:proto=tcp:toport=80<br>firewall-cmd –add-port=8080/tcp<br>firewall-cmd –remove-service=http</p><p>端口转发还可以做流量分发，一个防火墙拖着好多台运行着不同服务的机器，然后用防火墙将不同端口的流量转发至不同机器。</p><h3 id="6-多区域的应用"><a href="#6-多区域的应用" class="headerlink" title="6.多区域的应用"></a>6.多区域的应用</h3><p>(1)一个接口只能对应一个区域，将接口与指定区域关联<br>firewall-cmd –change-interface=ens75 –zone=drop<br>(2)根据不同的访问来源网段，设定至不同的区域规则<br>firewall-cmd –add-source=192.168.75.0/24 –zone=public<br>firewall-cmd –add-source=192.168.85.0/24 –zone=drop<br>firewall-cmd –get-active-zones<br>(3)建议配置方案<br>将所有接口划分到对应的区域，<br>根据网段配置至不同的区域，<br>不同的区域配置不同的规则。</p><p>(4)检查防火墙设置<br>firewall-cmd –get-active-zones<br>firewall-cmd –list-all –zone=drop</p>]]></content>
      
      
      
        <tags>
            
            <tag> 系统安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>上传绕过</title>
      <link href="/2019/08/27/shang-chuan-rao-guo/"/>
      <url>/2019/08/27/shang-chuan-rao-guo/</url>
      
        <content type="html"><![CDATA[<h4 id="上传漏洞过滤机制部分整理："><a href="#上传漏洞过滤机制部分整理：" class="headerlink" title="上传漏洞过滤机制部分整理："></a><strong>上传漏洞过滤机制部分整理：</strong></h4><p><strong>1.</strong>$deny_ext = array();<br>//array()用于创建数组,通过匹配给定的字符，达到过滤的作用</p><p>2.$file_name = trim($_FILES[‘upload_file’][‘name’]);<br>//trim()用于去掉字符串两端的多余的空格</p><p>3.$file_name = deldot($file_name);<br> //删除文件名末尾的点</p><p>4.$file_ext = strrchr($file_name, ‘.’);<br>//搜索 “.” 在字符串中的位置，并返回从该位置到字符串结尾的所有字符</p><p>5.$file_ext = strtolower($file_ext);<br>//转换为小写</p><p>6.$file_ext = trim($file_ext);<br>//收尾去空</p><p>7.$file_ext = str_ireplace(‘::$DATA’, ‘’, $file_ext);<br>//去除字符串::$DATA</p><p>采用Windows文件流特性,必须是windows, 必须是php, 必须是那个源文件 php在window的时候如果文件名+”::$DATA”会把::$DATA之后的数据当成文件流处理,不会检测后缀名.且保持”::$DATA”之前的文件名,目的就是不检查后缀名</p>]]></content>
      
      
      
        <tags>
            
            <tag> 上传绕过技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>策略路由</title>
      <link href="/2019/08/20/ce-lue-lu-you/"/>
      <url>/2019/08/20/ce-lue-lu-you/</url>
      
        <content type="html"><![CDATA[<p><strong>策略路由</strong></p><p>策略路由提供了一种根据网络管理者制定的策略来进行数据包转发的机制。基于策略的路由比传统路由能力更强，使用更灵活，它使用网络管理者不仅能够根据目的地址，而且能够根据协议类型、报文大小、应用或IP源地址来选择转发路径。策略由路由映射表来定义。</p><h2 id="实验一、基于源IP地址的策略路由配置"><a href="#实验一、基于源IP地址的策略路由配置" class="headerlink" title="实验一、基于源IP地址的策略路由配置"></a><strong>实验一、基于源IP地址的策略路由配置</strong></h2><p><strong>实验目的：</strong></p><p>1、用route-map定义路由策略。</p><p>2、在接口下应用路由策略。</p><p>3、基于源IP地址的策略路由的配置和调试。</p><p><strong>实验拓朴：</strong></p><p><img src="https://s2.ax1x.com/2019/08/21/mNbcmF.jpg" alt></p><p><strong>实验步骤：</strong></p><p>在路由器R1的f0/0接口应用IP策略路由CCNA，使得从主机PC2来的数据设置一跳地址为：172.16.12.2；从主机PC3来的数据设置下一跳地址为：172.16.21.2，所有其他的数据包正常转发，整个网络运行EIGRP路由协议。</p><p><strong>配置ACL</strong></p><p>R1(config)#access-list 1 permit 172.16.1.2</p><p>R1(config)#access-list 2 permit 172.16.1.3</p><p><strong>配置路由映射表</strong></p><p>R1(config)#route-map CCNA permit 10</p><p>R1(config-route-map)#match ip address 1</p><p>R1(config-route-map)#set ip next-hop 172.16.12.2</p><p>R1(config-route-map)#exit</p><p>R1(config)#route-map CCNA permit 20</p><p>R1(config-route-map)#match ip address 2</p><p>R1(config-route-map)#set ip next-hop 172.16.21.2</p><p><strong>应用策略路由</strong></p><p>R1(config)#int f0/0</p><p>R1(config-if)#ip policy route-map CCNA</p><p><strong>实验调试：</strong></p><p>1、<strong>查看路由路径</strong></p><p>PC2#traceroute 172.16.2.2</p><p>PC3#traceroute 172.16.2.2</p><p>2、<strong>在R1上显示调试信息</strong></p><p>R1#debug ip policy</p><p>PC2：ping 172.16.2.2  </p><p>PC6:ping 172.16.2.2</p><p><strong>3、显示在哪些接口上应用了策略路由</strong></p><p>R1#sh ip policy</p><p><strong>4、显示定义的所有路由策略及路由策略匹配的情况</strong></p><h2 id="实验二、基于数据包长度的策略路由配置"><a href="#实验二、基于数据包长度的策略路由配置" class="headerlink" title="实验二、基于数据包长度的策略路由配置"></a><strong>实验二、基于数据包长度的策略路由配置</strong></h2><p><strong>实验目的：</strong></p><p>1、用route-map定义路由策略。</p><p>2、在接口下应用路由策略。</p><p>3、基于数据包长度的策略路由的配置和调试。</p><p><strong>实验拓朴：</strong></p><p><img src="https://s2.ax1x.com/2019/08/21/mNbqTH.jpg" alt> </p><p><strong>实验步骤：</strong></p><p>在R1的f0/0接口应用IP策略路由CCNP，使得对大小为“64-100”字节的数据包设置出接口为s1/0;数据包大小“101-100”字节的数据包设置出接口为“f0/1”,所有其他的数据包正常转发，整个网络运行EIGRP路由协议。</p><p><strong>配置路由映射表</strong></p><p>R1(config)#route-map CCNP permit 10</p><p>R1(config-route-map)#match length 64 100</p><p>R1(config-route-map)#set interface s1/0</p><p>R1(config)#route-map CCNP permit 20</p><p>R1(config-route-map)#match length 101 1000</p><p>R1(config-route-map)#set interface f0/1</p><p><strong>应用策略路由</strong></p><p>R1(config)#int f0/0</p><p>R1(config-if)#ip policy route-map CCNP</p><p>R1(config-if)#exit</p><p>R1(config)#ip local policy route-map CCNP</p><p><strong>实验调试：</strong></p><p><strong>1.在主机上执行扩展ping命令，在R1上显示调试信息。</strong></p><p>PC2：ping 172.16.2.2 repeat 1 size 90</p><p>PC2：ping 172.16.2.2 repeat 1 size 300</p><p>PC2：ping 172.16.2.2 repeat 1 size 1200</p><p><strong>2、**</strong>显示在哪些接口上应用了策略路由**</p><p>R1#sh ip policy</p><p><strong>3、显示定义的所有路由策略及路由策略匹配的情况</strong></p><p>R1#sh route-map CCNP</p><h2 id="实验三、基于应用的策略路由配置"><a href="#实验三、基于应用的策略路由配置" class="headerlink" title="实验三、基于应用的策略路由配置"></a><strong>实验三、基于应用的策略路由配置</strong></h2><p><strong>实验目的：</strong></p><p>1、用route-map定义路由策略。</p><p>2、在接口下应用路由策略。</p><p>3、基于数据包长度的策略路由的配置和调试。</p><p><strong>实验拓朴：</strong></p><p><img src="https://s2.ax1x.com/2019/08/21/mNqpX8.jpg" alt></p><p><strong>实验步骤：</strong></p><p>在R1的f0/0接口应用IP策略路由CCIE，使得对HTTP数据包设置一跳地址为：172.16.12.2，并且设置IP数据包优先级为”flash”,为telnet数据包设置下一跳地址为：172.16.21.2，并且设置IP数据包优先级为：critical，所有其他的数据包正常转发，整个路由协议运行EIGRP。</p><p><strong>配置R2的http与telnet访问</strong></p><p>  R2(config)#ip http server</p><p>R2(config)#line vty 0 4</p><p>R2(config-line)#no login</p><p>R2(config-line)#privilege level 15</p><p><strong>配置扩展ACL</strong></p><p>R1(config)#ip access-list extended HTTP</p><p>R1(config-ext-nacl)#permit tcp any any eq 80</p><p>R1(config-ext-nacl)#exit</p><p>R1(config)#ip access-list extended TELNET</p><p>R1(config-ext-nacl)#permit tcp any any eq 23</p><p><strong>配置路由映射表</strong></p><p>R1(config)#route-map CCIE permit 10</p><p>R1(config-route-map)#match ip address HTTP</p><p>R1(config-route-map)#set ip precedence flash</p><p>R1(config-route-map)#set ip next-hop 172.16.12.2</p><p>R1(config)#route-map CCIE permit 20</p><p>R1(config-route-map)#match ip address TELNET</p><p>R1(config-route-map)#set ip precedence critical</p><p>R1(config-route-map)#set ip next-hop 172.16.21.2</p><p><strong>应用路由映射表</strong></p><p>R1(config)#int f0/0</p><p>R1(config-if)#ip policy route-map CCIE</p><p>R1(config)#ip local policy route-map CCIE</p>]]></content>
      
      
      
        <tags>
            
            <tag> 路由协议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IP地址分类</title>
      <link href="/2019/08/20/ip-di-zhi-fen-lei/"/>
      <url>/2019/08/20/ip-di-zhi-fen-lei/</url>
      
        <content type="html"><![CDATA[<h1 id="IP地址介绍及VLSM"><a href="#IP地址介绍及VLSM" class="headerlink" title="IP地址介绍及VLSM"></a>IP地址介绍及VLSM</h1><h2 id="IP地址分类"><a href="#IP地址分类" class="headerlink" title="IP地址分类"></a>IP地址分类</h2><h3 id="A类网络地址范围"><a href="#A类网络地址范围" class="headerlink" title="A类网络地址范围"></a><strong>A类网络地址范围</strong></h3><p>第一个字节的第一位必须为0，第一个字节的取值为0-127</p><p>即: 0xxxxxxx        取值范围是:  0000000-01111111 (0-127)</p><p>1.1.1.1/8        网络号: 8位        255.0.0.0</p><p>网络地址：1.0.0.0</p><p>广播地址：1.255.255.255</p><p>在这网络中有多少个地址呢？2^24</p><p>有效地址：2^24-2</p><h3 id="B类网络地址范围"><a href="#B类网络地址范围" class="headerlink" title="B类网络地址范围"></a><strong>B类网络地址范围</strong></h3><p>第一个字节的第一位必须是1，且第二位必须是0，第一个字节的取值为128-191</p><p>即：10000000   取值范围是：10000000－10111111 (128-191)</p><p>181.1.1.1/16   255.255.0.0</p><p>网络地址：181.1.0.0</p><p>广播地址：181.1.255.255</p><p>有效地址：2^16-2</p><h3 id="C类网络的地址范围"><a href="#C类网络的地址范围" class="headerlink" title="C类网络的地址范围"></a><strong>C类网络的地址范围</strong></h3><p>第一个字节的前两位必须是1，且第三位必须是0，第一个字节的取值为192-223</p><p>即:  11000000    取值范围是:  11000000-11011111  (192-223)</p><p>192.168.1.1/24  255.255.255.0</p><p>网络地址：192.168.1.0</p><p>广播地址：192.168.1.255</p><p>有效地址：2^8-2  254</p><p>D类网络的地址范围：第一个字节为224–239，用作组播地址。</p><p>E类网络的地址范围：第一个字节为240–255，用于科学用途。</p><h2 id="各类网络地址中网络数和主机数"><a href="#各类网络地址中网络数和主机数" class="headerlink" title="各类网络地址中网络数和主机数"></a><strong>各类网络地址中网络数和主机数</strong></h2><p>A 类网络地址：</p><p>　　　　　　实际可用的A类网络地址数为：2^7=128</p><p>​                         合法的主机数为：2 ^24－2＝16777214</p><p>B类网络地址：</p><p>　　　　　　实际可用的B类网络地址数为：2^14=16384</p><p>​                        合法的主机数为：2^16-2=65534</p><p>C类网络地址：</p><p>　　　　　　实际可用的C类网络地址数为：2^21=2097152</p><p>​                        合法的主机数为：2^8-2=254</p><p><strong>私有IP地址范围 在公网中是不能路由的，必须经过地址转换</strong></p><p> A类　10.0.0.0~10.255.255.255</p><p> B类    172.16.0.0~172.31.255.255</p><p> C类    192.168.0.0~192.168.255.255</p><h2 id="变长子网掩码"><a href="#变长子网掩码" class="headerlink" title="变长子网掩码"></a><strong>变长子网掩码</strong></h2><p>使用长度不同的子网掩码将网络划分成多个子网，适用于不同类型的网络设计，称为VLSM组网。</p><p>分类路由选择：RIP1  IGRP协议</p><p>无类路由选择：RIP2　EIGRP　OSPF等协议</p><p><strong>有类路由</strong>：汇总以后地址是标准的A B C类地址掩码即255.0.0.0 255.255.0.0 255.255.255.0 (有类路由里大类网络中子网码必须一致这样叫做有类路由因为有类路由协议不传递子网码信息)</p><p><strong>无类路由</strong>：汇总以后地址是无类的比如 172.16.12.0/16 - 172.16.15.0/16 汇总以后的地址是 172.16.12.0/20 子码 不属于A B C 3个类别(无类路由是相反的，他传递子网信息所有大类网络中可以使用不同的子网码)</p><p><strong>地址汇总</strong>：<br>汇总：也叫路由聚合，让路由选择协议能够用一个地址通告众多网络。旨在缩小路由器中路由选择表的规模，以节省内存，并缩短IP对路由选择表进行分析以找出前往远程网络的所需时间。</p><p>汇总实际上比较简单，因为你只需确定块大小，而这些块大小我们在学习子网划分和VLSM设计时都使用过。例如，如果要将如F网络汇总到一个网络通告中,只需确定块大小，你就能轻松地找出答案:<br>网络192.168. 16.0~ 192.168.31.0<br>块大小是多少呢?这总共恰好有16个C类网络，使用块大小16刚好能满足需求。<br>知道块大小后，你便可确定网络地址和子网掩码，它们可用于将这些网络汇总到-个通告中。用于通告汇总地址的网络地址总是块中的第-一个网络地址,这里为192.168.16.0。 在这个例子中，为确定子网掩码，什么样的子网掩码提供的块大小为16呢?答案是240, 应将第三个字节(进行汇总的字节)设置为240,因此子网掩码为255.255.240.0。<br>再来看一个示例，但这次从主机的角度看。<br>如果汇总地址为192.168.144.0/20, 我们将根据它转发前往哪些主机地址的分组?在这里，汇总地址为192.168.144.0,子网掩码为255.255.240.0。<br>第三个字节的块大小为16, 而被汇总的第一个地址为192.168.144.0, 在第三个字节加上块大小16后为160，因此汇总的地址范围为144~ 159。</p>]]></content>
      
      
      
        <tags>
            
            <tag> IP地址 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RIP 路由协议</title>
      <link href="/2019/08/09/my-first-blog/"/>
      <url>/2019/08/09/my-first-blog/</url>
      
        <content type="html"><![CDATA[<p>动态路由协议包括距离向量路由协议和链路状态路由协议。RIP（Routing InformationProtocols,路由信息协议）是使用最广泛的距离向量路由协议。RIP 是为小型网络环境设计的，因为这类协议的路由学习及路由更新将产生较大的流量,占用过多的带宽。</p><a id="more"></a><h2 id="RIP-概述"><a href="#RIP-概述" class="headerlink" title="RIP 概述"></a><strong>RIP 概述</strong></h2><p>RIP 是由Xerox 在70 年代开发的，最初定义在RFC1058 中。RIP 用两种数据包传输更新:更新和请求,每个有RIP 功能的路由器默认情况下每隔30 秒利用UDP 520 端口向与它直连的网络邻居广播(RIP v1)或组播(RIP v2)路由更新。因此路由器不知道网络的全局情况,如果路由更新在网络上传播慢，将会导致网络收敛较慢，造成路由环路。为了避免路由环路， RIP 采用水平分割、毒性逆转、定义最大跳数、闪式更新、抑制计时5 个机制来避免路由环路。 </p><p>RIP 协议分为版本1 和版本2。不论是版本1 或版本2，都具备下面的特征： </p><ol><li>是距离向量路由协议； </li><li>使用跳数（Hop Count）作为度量值； </li><li>默认路由更新周期为30 秒；</li><li>管理距离（AD）为120； </li><li>支持触发更新； </li><li>最大跳数为15 跳； </li><li>支持等价路径,默认4 条,最大6 条； </li><li>使用UDP520 端口进行路由更新。</li></ol><p>而RIPv1 和RIPv2 的区别如表 </p><table><thead><tr><th>RIPv1</th><th>RIPv2</th></tr></thead><tbody><tr><td>在路由更新的过程中不携带子网信息</td><td>在路由更新的过程中携带子网信息</td></tr><tr><td>不提供认证</td><td>提供明文和MD5认证</td></tr><tr><td>不支持VLSM和CIDR</td><td>支持VLSM和CIDR</td></tr><tr><td>采用广播更新</td><td>采用组播（224.0.0.9）更新</td></tr><tr><td>有类别（Classful）路由协议</td><td>无类别（Classless）路由协议</td></tr></tbody></table><p><img src="https://s2.ax1x.com/2019/08/19/m34VjP.png" alt></p><p>首先保证直连的连通性</p><p>在R1上:</p><pre><code>R1(config)#interface fastEthernet 0/0 R1(config-if)#ip address 12.1.1.1 255.255.255.0 R1(config-if)#no shutdown  R1(config-if)#exit  R1(config)#interface loopback 0 R1(config-if)#ip address 11.1.1.1 255.255.255.0</code></pre><p>在R2上:</p><pre><code>R2(config)#interface fastEthernet 1/0 R2(config-if)#ip address 23.1.1.2 255.255.255.0 R2(config-if)#no shutdown  R2(config-if)#exit R2(config)#interface loopback 0 R2(config-if)#ip address 22.1.1.1 255.255.255.0</code></pre><p>在R3上:</p><pre><code>R3(config)#interface fastEthernet 0/0R3(config-if)#ip address 23.1.1.3 255.255.255.0R3(config-if)#no shutdown R3(config-if)#exitR3(config)#interface loopback 0R3(config-if)#ip address 33.1.1.1 255.255.255.0</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> RIP </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
